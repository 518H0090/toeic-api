
    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;

    create table test_session_details (
        is_correct boolean not null,
        question_id integer not null check (question_id>=1),
        test_session_detail_id integer generated by default as identity,
        test_session_id integer,
        created_at timestamp(6) not null,
        selected_answer varchar(255) not null,
        primary key (test_session_detail_id)
    );

    create table test_sessions (
        exam_id integer not null check (exam_id>=1),
        score integer not null check (score>=0),
        test_session_id integer generated by default as identity,
        user_id integer not null check (user_id>=1),
        created_at timestamp(6) not null,
        end_time timestamp(6),
        start_time timestamp(6) not null,
        status varchar(255) check (status in ('COMPLETED','PROGRESS','FAILED')),
        primary key (test_session_id)
    );

    alter table if exists test_session_details 
       add constraint FK9hk7jmdn4ab8rh5rdco17mkrw 
       foreign key (test_session_id) 
       references test_sessions;
